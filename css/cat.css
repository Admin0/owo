@import url('https://fonts.googleapis.com/css2?family=Pixelify+Sans:wght@700&display=swap');

.info-window {
    /* font-family: 'Pixelify Sans', 'StarDust Bold', sans-serif; */
    position: absolute;
    background-color: #fff;
    font-size: 10px;
    margin-left: 8px;
    margin-top: -2px;
    display: none;
}

.info-window table {
    border-collapse: collapse;
    border-spacing: 0;
    width: 175px;
}

.info-window table th,
.info-window table td {
    border: 2px dashed #4caf50;
    color: #4caf50;
    padding: 2px 4px;
}

.pisces+.info-window table th,
.pisces+.info-window table td {
    border-color: #FFC107;
    color: #FFC107;
}

.yarnball+.info-window table th,
.yarnball+.info-window table td {
    border-color: #FF5722;
    color: #FF5722;
}

.info-window table th:nth-child(1) {
    width: 50px;
}

.cat {
    width: var(--sprite-block-size);
    height: var(--sprite-block-size);
    background: url('../img/cat_skin_우유.png');
    background-size: calc(8 * var(--sprite-block-size)) calc(8 * var(--sprite-block-size));
    image-rendering: pixelated;
    position: absolute;

    z-index: 10;
    animation: stop .5s steps(4) infinite;

    cursor: pointer;
    --sprite-block-size: 64px;
}

body.dev_mode .cat,
body.dev_mode .pisces {
    outline: 2px dashed #FFC107;
    border-radius: 4px;
}

body.dev_mode .yarnball {
    outline-color: #FF5722;
}

body.dev_mode .cat {
    outline-color: #4caf50;
}

body.dev_mode .info-window {
    display: inherit;
}

.cat.left {
    transform: scaleX(-1);
}

.cat.walk {
    animation: walk 1s steps(8) infinite;
}

.cat.run {
    animation: run 1s steps(8) infinite;
}


.cat.wash {
    animation: wash .5s steps(4) infinite;
}


.cat.watch {
    animation: watch .5s steps(4) infinite;
}


.cat.lick {
    animation: lick .5s steps(4) infinite;
}


.cat.stretch {
    animation: stretch 1s steps(8) 1;
}

.cat.surprised {
    animation: surprised 1s steps(8) 1;
}

.cat.drag {
    animation: drag .5s steps(4) infinite;
}

@keyframes stop {
    from {
        background-position: calc(var(--sprite-block-size) *0) 0;
    }

    to {
        background-position: calc(var(--sprite-block-size) * -4) 0;
    }
}


@keyframes walk {
    from {
        background-position: 0px calc(var(--sprite-block-size) * -1);
    }

    to {
        background-position: calc(var(--sprite-block-size) * -8) calc(var(--sprite-block-size) * -1);
    }
}


@keyframes run {
    from {
        background-position: 0px calc(var(--sprite-block-size) * -2);
    }

    to {
        background-position: calc(var(--sprite-block-size) * -8) calc(var(--sprite-block-size) * -2);
    }
}


@keyframes wash {
    from {
        background-position: calc(var(--sprite-block-size) * -4) calc(var(--sprite-block-size) * -3);
    }

    to {
        background-position: calc(var(--sprite-block-size) * -8) calc(var(--sprite-block-size) * -3);
    }
}

@keyframes watch {
    from {
        background-position: calc(var(--sprite-block-size) * -4) 0;
    }

    to {
        background-position: calc(var(--sprite-block-size) * -8) 0;
    }
}


@keyframes lick {
    from {
        background-position: calc(var(--sprite-block-size) * -0) calc(var(--sprite-block-size) * -3);
    }

    to {
        background-position: calc(var(--sprite-block-size) * -4) calc(var(--sprite-block-size) * -3);
    }
}


@keyframes stretch {
    from {
        background-position: calc(var(--sprite-block-size) * -0) calc(var(--sprite-block-size) * -5);
    }

    to {
        background-position: calc(var(--sprite-block-size) * -8) calc(var(--sprite-block-size) * -5);
    }
}


@keyframes surprised {
    from {
        background-position: calc(var(--sprite-block-size) * -0) calc(var(--sprite-block-size) * -6);
    }

    to {
        background-position: calc(var(--sprite-block-size) * -8) calc(var(--sprite-block-size) * -6);
    }
}

@keyframes drag {
    from {
        background-position: calc(var(--sprite-block-size) * -0) calc(var(--sprite-block-size) * -4);
    }

    to {
        background-position: calc(var(--sprite-block-size) * -4) calc(var(--sprite-block-size) * -4);
    }
}



.pisces {
    background: url('../img/fish.png');
    position: absolute;
    width: var(--sprite-block-size);
    height: var(--sprite-block-size);
    z-index: 10;
    cursor: pointer;

    background-size: calc(4 * var(--sprite-block-size)) calc(5 * var(--sprite-block-size));
    image-rendering: pixelated;
    --sprite-block-size: 64px;

    animation: fish .125s steps(1);
}

.pisces.right {
    transform: scaleX(-1);
}

@keyframes fish {
    from {
        background-position: calc(var(--sprite-block-size) * -1) calc(var(--sprite-block-size) * 0);
    }

    to {
        background-position: calc(var(--sprite-block-size) * 0) calc(var(--sprite-block-size) * 0);
    }
}

.fish.drag {
    background-position: calc(var(--sprite-block-size) * -1) calc(var(--sprite-block-size) * 0);

}

.goldfish {
    animation: goldfish .125s steps(1);
    background-position: calc(var(--sprite-block-size) * -2) calc(var(--sprite-block-size) * 0);
}

@keyframes goldfish {
    from {
        background-position: calc(var(--sprite-block-size) * -3) calc(var(--sprite-block-size) * 0);
    }

    to {
        background-position: calc(var(--sprite-block-size) * -2) calc(var(--sprite-block-size) * 0);
    }
}

.goldfish.drag {
    background-position: calc(var(--sprite-block-size) * -3) calc(var(--sprite-block-size) * 0);

}

.cucumber {
    animation: cucumber .125s steps(1);
    background-position: calc(var(--sprite-block-size) * 0) calc(var(--sprite-block-size) * -1);
}

@keyframes cucumber {
    from {
        background-position: calc(var(--sprite-block-size) * -1) calc(var(--sprite-block-size) * -1);
    }

    to {
        background-position: calc(var(--sprite-block-size) * 0) calc(var(--sprite-block-size) * -1);
    }
}

.cucumber.drag {
    background-position: calc(var(--sprite-block-size) * -1) calc(var(--sprite-block-size) * -1);

}

.mineral {
    animation: mineral .125s steps(1);
    background-position: calc(var(--sprite-block-size) * 0) calc(var(--sprite-block-size) * -2);

}

@keyframes mineral {
    from {
        background-position-x: calc(var(--sprite-block-size) * -1);
    }

    to {
        background-position-x: calc(var(--sprite-block-size) * 0);
    }
}

.mineral.drag {
    background-position-x: calc(var(--sprite-block-size) * -1);

}


.richmineral {
    animation: richmineral .125s steps(1);
    background-position: calc(var(--sprite-block-size) * -2) calc(var(--sprite-block-size) * -2);
}

@keyframes richmineral {
    from {
        background-position-x: calc(var(--sprite-block-size) * -3);
    }

    to {
        background-position-x: calc(var(--sprite-block-size) * -2);
    }
}

.richmineral.drag {
    background-position-x: calc(var(--sprite-block-size) * -3);

}

.raremineral {
    animation: raremineral .125s steps(1);
    background-position: calc(var(--sprite-block-size) * 0) calc(var(--sprite-block-size) * -3);
}

@keyframes raremineral {
    from {
        background-position-x: calc(var(--sprite-block-size) * -1);
    }

    to {
        background-position-x: calc(var(--sprite-block-size) * 0);
    }
}

.raremineral.drag {
    background-position-x: calc(var(--sprite-block-size) * -1);

}

.richraremineral {
    animation: richraremineral .125s steps(1);
    background-position: calc(var(--sprite-block-size) * -2) calc(var(--sprite-block-size) * -3);
}

@keyframes richraremineral {
    from {
        background-position-x: calc(var(--sprite-block-size) * -3);
    }

    to {
        background-position-x: calc(var(--sprite-block-size) * -2);
    }
}

.richraremineral.drag {
    background-position-x: calc(var(--sprite-block-size) * -3);

}

.yarnball {
    animation: yarnball .125s steps(1);
    background-position: calc(var(--sprite-block-size) * 0) calc(var(--sprite-block-size) * -4);

}

@keyframes yarnball {
    from {
        background-position-x: calc(var(--sprite-block-size) * -1)
    }

    to {
        background-position-x: calc(var(--sprite-block-size) * 0);
    }
}

.yarnball.drag {
    background-position-x: calc(var(--sprite-block-size) * -1);

}

.yarnball.move {
    animation: yarnball_roll .5s steps(4) infinite;
}

@keyframes yarnball_roll {
    from {
        background-position-x: calc(var(--sprite-block-size) * 0)
    }

    to {
        background-position-x: calc(var(--sprite-block-size) * -4);
    }
}


/*
 * 고양이 울음 소리 말풍선
 */
.meow {
    font-family: 'Pixelify Sans', sans-serif;
    position: absolute;
    background-color: #fff;
    font-size: 12px;
    animation: meow 2s;
    padding: 4px;
    border: 2px solid #777;
    border-radius: 4px;
    z-index: 10;
}

.meow::before,
.meow::after {
    position: absolute;
    content: '';
    width: 0;
    height: 0;
    top: 100%;
    left: calc(50% - 6px);
    border: 6px solid;
    border-color: #777 transparent transparent transparent;
}

.meow::after {
    margin-top: -3px;
    border-color: #fff transparent transparent transparent;
}

@keyframes meow {
    from {
        opacity: 1;
        visibility: visible;
        margin-top: 0;
    }

    to {
        opacity: 0;
        visibility: hidden;
        margin-top: -32px;
    }
}