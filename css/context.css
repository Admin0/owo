/* ------------------------------------------------------------------- */
/* ***** context-menu ***** */
/* ------------------------------------------------------------------- */
#context,
.context {
  z-index: 16;
  position: fixed;
  opacity: 0;
  visibility: hidden;
  cursor: default;
  /* color: rgba(0, 0, 0, .5); */
  background-color: #fff;
  /* border: 1px solid #bbb; */
  border-radius: 3px;
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);
  transition: .25s;
  transition-property: opacity, transform, margin, visibility;
  top: 50%;
  font-size: 14px;
  max-width: 350px;
  transform: perspective(1000px) rotateX(5deg);
  margin-top: -2em;
  text-overflow: hidden;
}

#context {
  /* font-family: 'StarDust Bold', sans-serif; */
}

.context {
  position: absolute;
  min-width: 50px;
  white-space: nowrap;
  transform: none;
  margin-top: 0;
}

#context ul {
  padding: .5em 0;
  margin: 0;
  border-bottom: 1px solid rgba(0, 0, 0, 0.125);
}

.general__dark #context ul {
  border-bottom: 1px solid rgba(255, 255, 255, 0.125);
}

#context ul:last-child {
  border-bottom: none;
}

#context ul li,
#settings ul li {
  height: 16px;
  display: flex;
  align-items: center;
  padding: .5em 1em;
  margin: 0;
  text-decoration: none;
  list-style: none;
}

#context .activated {
  background-color: #FFF9C4;
}

body:not(.dev_mode) #context ul li.disabled {
  color: #aaa;
  pointer-events: none;
}

#context ul li:not(body:not(.dev_mode) .disabled):hover {
  background-color: rgba(0, 0, 0, 0.2);
}

#context ul li:not(.disabled):hover .context,
.context:hover {
  opacity: 1;
  visibility: visible;
}

#context.on,
.context:hover {
  transform: none;
  transform-origin: 50% 100%;
  margin-top: 0;
  visibility: visible;
  opacity: 1;
}

#context .shortcut {
  position: absolute;
  margin-right: 2em;
  right: 0;
}

#context .shortcut::before {
  /* content: "("; */
}

#context .shortcut::after {
  /* content: ")"; */
}

#context .skill_wrap {
  display: flex;
  padding-left: 3em;
  flex-wrap: wrap;
}

#context .icon,
#resources li,
.resources li,
#settings .icon {
  --sprite-block-size: 64px;
  --sprite-position-x: 0px;
  --sprite-position-col-2: calc(var(--sprite-block-size) * -2);
  --sprite-position-col-3: calc(var(--sprite-block-size) * -4);

  width: var(--sprite-block-size);
  height: var(--sprite-block-size);

  padding: 0;
  margin-left: -12px;
}

#context .icon:not(.skill),
#resources li,
.resources li {
  pointer-events: none;
}

#context .icon:before,
#resources li:before,
.resources li:before,
#settings .icon:before {
  content: '';

  position: absolute;
  width: inherit;
  height: inherit;
  background: url('../img/context.png');
  background-size: calc(6 * var(--sprite-block-size)) calc(7 * var(--sprite-block-size));
  background-position-x: calc(var(--sprite-position-x));
  background-position-y: calc(var(--sprite-block-size) * 1);
  background-repeat: no-repeat;
  image-rendering: pixelated;
}

#context .icon:before,
#settings .icon:before {
  filter: grayscale(1);
}

#context li:hover>.icon:before {
  filter: none;
}

#context .text {
  max-width: calc(350px - 32px);
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

#context .arrow {
  position: absolute;
  right: 1em;
}

#context .skill,
#settings .icon {
  outline: none;
  margin: 0;
  width: 48px;
  height: 48px;
}

#context .skill:before,
#settings .icon:before {
  margin-top: -16px;
  margin-left: -8px;
  /* clip: rect(0 40px 40px 0); */
}

#context .skill:hover:before,
#settings .icon.on:before,
#settings .icon:hover:before {
  filter: none;
}

#context .skill.activated,
#context .skill.activated:hover {
  background-color: #FFF9C4;
  filter: none;
}

#context .icon.cat:before {
  background-position-y: calc(var(--sprite-block-size) * 0);
}

#context .icon.fish:before {
  background-position-y: calc(var(--sprite-block-size) * -1);
}

#context .icon.cucumber:before {
  background-position-y: calc(var(--sprite-block-size) * -2);
}

#context .icon.mineral:before {
  background-position-y: calc(var(--sprite-block-size) * -3);
}

#context .icon.mineral2:before {
  --sprite-position-x: var(--sprite-position-col-2);
  background-position-y: calc(var(--sprite-block-size) * -3);
}

#context .icon.random:before {
  animation: random 1s steps(5, jump-none) infinite;
}

#context .icon.yarnball:before {
  background-position-y: calc(var(--sprite-block-size) * -4);
}

#context .icon.waterbottle:before {
  background-position-y: calc(var(--sprite-block-size) * -5);
}

#context .icon.waterbottle2:before {
  --sprite-position-x: var(--sprite-position-col-2);
  background-position-y: calc(var(--sprite-block-size) * -5);
}

#context .icon.waterbottle3:before {
  --sprite-position-x: var(--sprite-position-col-3);
  background-position-y: calc(var(--sprite-block-size) * -5);
}

#context .icon.potion_poison:before {
  background-position-y: calc(var(--sprite-block-size) * -6);
}

#context .icon.동전:before {
  --sprite-position-x: var(--sprite-position-col-2);
  background-position-y: calc(var(--sprite-block-size) * -4);
}


#settings .icon.enf:before {
  background-position: calc(var(--sprite-block-size) * -2)calc(var(--sprite-block-size) * -2);
}

#settings .icon.enf.on:before {
  background-position-x: calc(var(--sprite-block-size) * -3);
}

#settings .icon.tk:before {
  background-position: calc(var(--sprite-block-size) * -2)calc(var(--sprite-block-size) * -1);
}

#settings .icon.tk.on:before {
  background-position-x: calc(var(--sprite-block-size) * -3);
}

#settings .icon.jw:before {
  background-position: calc(var(--sprite-block-size) * -2)calc(var(--sprite-block-size) * 0);
}

#settings .icon.jw.on:before {
  background-position-x: calc(var(--sprite-block-size) * -3);
}

@keyframes random {
  from {
    background-position-y: calc(var(--sprite-block-size) * -1);
  }

  to {
    background-position-y: calc(var(--sprite-block-size) * -5);
  }
}

#context .icon.activated:before,
#context .activated .icon:before {
  background-position-x: calc(var(--sprite-position-x) + var(--sprite-block-size) * -1);
  filter: none;
}

#context .icon.timer:before {
  background-position: calc(var(--sprite-block-size) * -5) 0;
}

#context .icon.bucket:before {
  background-position: calc(var(--sprite-block-size) * -4) 0;
}

#context .icon.dex:before {
  background-position: calc(var(--sprite-block-size) * -4) calc(var(--sprite-block-size) * -1);
}

#context_bt {
  display: none;
}


/* messages */

#messages {
  position: fixed;

  z-index: 15;
  min-width: 600px;
  width: fit-content;
  max-width: calc(800px - 16px);
  max-height: 200px;
  padding: .5em 0;
  left: calc(50% - 220px);
  bottom: 25%;

  cursor: default;

  /* font-family: 'DNFBitBitv2'; */
  pointer-events: none;

  overflow-y: hidden;
  transition: opacity .25s, box-shadow .25s, background-color .5s;
}

body.dev_mode #messages {
  pointer-events: initial;
}

#messages:hover {
  overflow-y: scroll;
  background-color: rgba(0, 0, 0, .125);
  box-shadow: inset 0 7px 10px -7px rgba(0, 0, 0, .5);
}



#messages:hover .hide {
  visibility: initial;
  opacity: 1;
}

#messages .message,
.message.inline {
  font-family: "GalmuriMono11", monospace;
  font-size: 12px;
  filter: drop-shadow(1px 0 #000) drop-shadow(-1px 0 #000) drop-shadow(0 1px #000) drop-shadow(0 -1px #000);
  will-change: transform;
  display: flex;
  margin: 0 8px;
  pointer-events: none;
}

.message.inline {
  display: block;
  position: fixed;
  animation: inline-message 2s forwards;
  transform: translateX(-50%);
  color: #ffffff;
  z-index: 15;
}

@keyframes inline-message {
  to {
    margin-top: -32px;
  }
}

.message .time,
.message .num,
.text.num {
  color: #76FF03;
}

.message .row {
  margin-right: 8px;
}

.message .text {
  color: #ffffff;
}

.message .cat,
.text.cat {
  color: #00E676;
}

.message .pisces,
.text.pisces {
  color: #FFEA00;
}

.message .villain,
.text.villain {
  color: #FF5252;
}

.message .var,
.text.var {
  color: #42A5F5;
}

.text.special,
.message .special {
  color: rgba(148, 187, 233, 1);
  background: linear-gradient(to right, #eeaeca 50%, rgba(148, 187, 233, 1) 100%);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}